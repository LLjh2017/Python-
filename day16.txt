2018    09.25    星期二




文件 File 
  什么是文件
    文件是用于数据存储的单位
    文件通常用于长期存储数据
    文件中的数据是以字节为单位进行顺序存储的
文件的操作流程：
  1.打开文件
  2.读/写文件
  3.关闭文件

文件的打开函数：
  open(file,mode='rt') 用于打开一个文件,返回此文件流
  对象如果打开失败,则会触发OSError错误！
    file 是文件路径名的字符串
    mode 是打开的模式　　　　

文件的关闭方法：
  F.close() # 关闭已经打开的文件,释放系统资源

文本文件的基本操作：
  读文件：
    F.readline()   # 读取一行文字
    F.readlines()  # 读取多行文字
    F.read(n)      # 读取n个字符
  写文件：  
    F.write(字符串) # 写字符串到一个已经打开的文件
    F.writelines(字符串列表)  # 写多个字符串到已经打开的文件中

示例：
# 打开文件,用f绑定文件流对象
try:
    # f=open("mynote.txt")
    f=open("/home/tarena/aid1808/linux/第一阶段/day00.txt")
    print('成功打开文件')
    # 读写文件
    s=f.readline() # 从文件中读取一行文字
    print(s)
    # 关闭文件
    f.close()
    print('成功关闭文件')
except OSError:
    print('打开文件失败')

练习：
  将如下数字用编辑器写入到文件data.txt中,数据如下：
    小李 138888888888
    小赵 139999999999
    张三 010-88888888
    写程序读取文件中的数据,打印出姓名和电话号码
    格式如下：
      姓名：小李   电话：138888888888
      姓名：小赵   电话：139999999999
      姓名：张三   电话：010-88888888
答案：

#1.打开文件,绝对路径
f=open('/home/tarena/test/code/聊天室项目/data.txt')
#1.打开文件,相对路径
f=open('data.txt')
# 2.读取文件数据，并打印为相应格式
#   每次只读取一行，然后进行处理后打印
while True:
    line=f.readline()
    if line=='':
        break
    line=line.strip() # 去掉末尾的'\n'
    L=line.split() # 将其拆分为字符串列表
    # L=['小李','1388888888']
    print('姓名:',L[0],'电话:',L[1])
f.close()

#方法2
f=open('data.txt')
lines=f.readlines()
for line in lines:
    line=line.strip()
	  L=line.split()
	  print('姓名:',L[0],'电话:',L[1])
f.close()

# 方法3
f=open('data.txt')
lines=f.read()
lines=lines.split('\n') # 以换行符进行拆分
for line in lines:
	  line=line.strip()
	  L=line.split()
	  print('姓名:',L[0],'电话:',L[1])
f.close()


#1.打开文件
f=open("myfile.txt",'w')
print("打开文件成功")
#2.写文件
f.write("这是第一行文字")
f.write('\n')              # 换行
f.write("ABCDEFG") 
print("写文件成功")
#3.关闭文件
f.close()
print("关闭文件成功")

文本文件读写时各操作系统的换行符问题
  linux换行符：'\n'
  window换行符：'\r\n'
  旧的Macintosh的换行符：'\r'
  新的Mac OS X 的换行符：'\n'

文本文件操作说明：
  文本模式下,各操作系统的换行符在读入python内部时会
  自动转换为'\n'

打开模式：
  'r':以只读方式打开(默认)
  'w':以只写方式打开,删除原有文件内容
      如果文件不存在,则创建该文件并以只写方式打开
  'x':创建一个新文件,并以写模式打开这个文件,如果
      文件存在则会产生"FileExistsError"错误
  'a':以只写文件打开一个文件,如果有原文件则追加到文件末尾

练习：
  1.写一个程序,输入很多人的姓名,年龄,家庭地址,保存在文件
    "infos.txt"中
  如：
    小李  20  北京市朝阳区
    小张  18  上海市浦东新区
  2.写一个程序,读入infos.txt中的内容,以如下格式
    打印
    姓名：小张,年龄：20,住址：北京市朝阳区
f=open("infos.txt",'w')
f.write('小李 20 北京市朝阳区')
f.write('\n')
f.write('小张 18 上海市浦东新区')
f.close()

f=open("infos.txt")
lines=f.read()
lines=lines.split('\n')
for line in lines:
    line=line.split(' ')
    print('姓名：%s,年龄：%s,住址：%s'%(line[0],
          line[1],line[2]))
f.close()

# 分两步来做：
# 1.读取数据形成字典组成的列表
# 2.把列表里的数据保存到文件infos.txt中
def get_infos():
    '''此函数返回字典组成的列表
    [{'name':'小张'，'age':18,'adress':'上海市浦东新区'}，
    {'name':'小李'，'age':20,'adress':'北京市朝阳区'}]'''
    L=[]
    while True:
        n=input("请输入姓名：")
        if not n:
            break
        a=int(input("请输入年龄："))
        addr=input("请输入家庭住址：")
        L.append(dict(name=n,
                age=a,address=addr))
    # 读数据
    return L
def save_to_file(L):
    try:
        # 打开文件
        f=open("infos.txt",'w')
        for d in L:
            f.write(d['name'])
            f.write(' ')
            f.write(str(d['age'])) # 需要转为字符串
            f.write(' ')
            f.write(d['addr'])
            f.write('\n') # 输出换行
            f.close()
    except OSError:
        print("打开文件失败")
# 1.读取数据形成字典组成的列表
L=get_infos()
# 2.把列表里的数据保存到文件infos.txt中
save_to_file(L)

# 分两步来做：
# 1.从文件中读取数据，形成字典组成的列表
# 2.打印列表中的数据
def read_from_file():
    '''返回字典组成的列表'''
    L=[]
    try:
        f=open("infos.txt",'r')
        while True:
            line=f.readline()
            if not line:
                break
            line=line.rstrip()  # '\n'
            items=line.split()  # 默认以空格作为分隔符
            d=dict(name=items[0],
                   age=int(items[1]),
                   address=items[2])
            L.append(d)
        f.close()
    except OSError:
        print("打开文件失败")
    return L

def print_infos(L):
    print(L)
    for line in L:
        print('姓名：%s,年龄：%s,住址：%s'%(line['name'],
          line['age'],line['address']))
# 1.从文件中读取数据，形成字典组成的列表
L=read_from_file()
# 2.打印列表中的数据
print_infos(L)


文件的迭代读取
  文件流对象是可迭代对象,迭代过程将以换行符'\n'
  作为分隔符依次获取
  如:
    f=open('infos.txt')
    for line in f :
        print(line)

二进制文件操作
  操作模式字符:'b'
    默认文件中存储的都是以字节(bytes为单位的数据,通常
    有人为规定的格式)
    对二进制文件的读写需要用字节串(bytes)进行操作

    F.read()的返回类型:
      对于文本模式,F.read()的返回类型为字符串str
      对于二进制模式,F.read()的返回类型为字节串bytes
示例：
  f=open('infos.txt','rb') # 二进制读
  b=f.read() # 返回字节串
  print('读取的内容长度是：',len(b))
  print('内容是：',b)
  s=b.decode() # 解码转为字符串 encode()编码 
  print(s)
  f.close()

try:
    f=open('infos.txt','wb') # 二进制写
    b=bytes(range(256))
    f.write(b)
    f.close()
    print('写数据成功')
except OSError:
    print('写文件失败！')

subl infos.txt 在subline里打开文件


F.tell() 返回当前文件流的绝对位置
  示例：
    f=open('data.txt','rb')
    f.read(3)
    print('当前的读写位置：',f.tell()) # 3
    f.read(7)
    print('当前的读写位置：',f.tell()) # 7
    f.close()

F.seek(偏移量,whence=相对位置)
  偏移量:
    大于0的数代表向后偏移(文件尾方向)
    小于0的数代表向文件头方向偏移
  相对位置:
    0 代表文件头位置开始偏移
    1 代表从当前位置开始偏移
    2 代表从文件尾开始偏移

F.flush() 强制清空缓冲区
示例：
  import time 
  f=open('myflush.txt','w')
  f.write('aaaaaaaaaaaaa')
  f.flush()  # 强制清空缓冲区 会保存文件到磁盘
  while True:
      time.sleep(0.1)
  f.close()


标准输入输出文件:
  sys.stdin   标准输入文件(默认为键盘)
  sys.stdout  标准输出文件(默认为屏幕终端)
  sys.stderr  标准错误输入文件(默认为屏幕终端)

标准文件不需要打开和关闭,可以直接使用
  模块名:sys

打开模式:
  二进制模式: 'b'
    把文件看成的字节数据,读写时会直接把磁盘数据以字节串形式
    返回或写入
  文本模式:   't'
    把文件看成是字符数据,读写过程中会自动编码/解码(默认是'utf-8')
    而且会把换行符进行自动转换

汉字编码问题
  问题:
    十个汉字占多少个字节

汉字编码:
  国标系列:
    GB2312(二字节编码,共6763个汉字)
    GBK(二字节编码,共21003个汉字)
    GB18030(二字节或四字节编码,共27533个汉字)
    注: Windows常用
  国际标准:
    Unicode  <---->  UTF-8
      Unicode16
        Unicode32
    (Linux / Mac OS X / Andriod 常用)

python 的编码字符串
  'gb18030'
  'gbk'
  'gb2312'
  'utf-8'
  'ascii'

编码注释:
  在源文件的第一行或第二行写入如下内容为编码注释
  # -*- coding:gbk -*-
  或
  # -*- coding:utf-8 -*-
  作用: 
    告诉python解释执行器,当前文件的编码是什么

练习:
  写程序实现复制文件功能
    要求:
      1.源文件路径和目标文件路径需手动输入
      2.要考虑关闭文件问题
      3.要考虑复制超大文件问题
      4.要能复制二进制文件
答案：
def mycopy(src_file,dst_file):
    """此函数的功能实现复制文件
    src_file，源文件名
    dst_file，目标文件名
    """
    try:
        fr=open(src_file,'rb')
        try:
            try:
                fw=open(dst_file,'wb')
                try:
                    while True:
                        data=fr.read(4096)
                        if not data:
                            break    
                        fw.write(data)
                except:
                    print('可能u盘被拔出')
                finally:
                    fw.close() # 关闭写文件
            except OSError:
                print('打开写文件失败')
                return False
        finally:
            fr.close() # 关闭读文件
    except OSError:
        print('打开读文件失败')
        return False
    return True
s=input('请输入源文件路径名：')
d=input('请输入目标文件路径名：')
if mycopy(s,d):
    print('复制文件成功')
else:
    print('复制文件失败')
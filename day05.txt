 2018  09.07   星期五



for 语句  
  作用： 
    用来遍历可迭代对象的数据元素

可迭代对象：
  字符串  str
  (以下后面会讲)
  列表 list
  元组 tuple
  字典 dict
  集合 set 
  ...

语法：
  for 变量列表 in 可迭代对象:
      语句块1(重复执行)
  else:
      语句块2
说明:
  1.else 子句可以省略(同while类似)
  2.当在循环内部用break终止循环时，else子句部分的
    语句不执行

练习：
  任意输入一段字符串
    1.计算这个字符串的'a'这个字符的个数，并打印出来
    2.计算出空格的个数，并打印出来
      (要求：用for语句实现，不允许用s.count方法)
  思考：
    用while语句能否实现上述功能
答案：
s=input('输入字符串：')
count_a=0
count_blank=0
for ch in s:
    if ch=='a':
        count_a+=1
    if ch==' ':
        count_blank+=1
print("'a'的个数是",count_a)
print("' '的个数是",count_blank)


range 函数：
  作用：
    用来创建一个生成一系列整数的可迭代对象(也叫
    整数序列生成器)
       函数              说明
    range(stop)  用来生成0～stop之间内的整数,直到stop
                 为止,不包括stop
    range(start,stop[,step]) 用来生成start~stop之间
                  的整数,直到stop为止(不包括stop)每个
                  整数间隔step,且step可以是负数
  说明：
    此对象可用于for语句来进行迭代取出其中的元素
  示例:
    range(4)         # 生成 0 1 2 3 
    range(3,6)       # 生成 3 4 5 
    range(1,10,2)    # 生成 1 3 5 7 9
    range(5,0,-2)    # 生成 5 3 1  
    range(5,0,-1)    # 生成 5 4 3 2 1 


练习：
  1.用for语句打印1~20的整数，打印在一行内
答案：
for x in range(1,21):
    print(x,end=' ')
print()

  2.用for语句打印1~20的整数，每行打印5个，打印四行
答案：
for x in range(1,21):
    print(x,end=' ')
    if x%5==0:
        print()

  3.求100以内有哪些数与自身+1的乘积在对11求余结果等于8？
    x*(x+1)%11==8
答案：
for x in range(100):
    if x*(x+1)%11==8:
        print(x,end=' ')
print()

  4.输入一段字符串，判断您输入的字符串中有几个中文字符：
    (注：中文字符的编码值一定大于127)
答案：
s=input('输入字符串：')
count=0   # 计数
for ch in s: 
    if ord(ch)>127:  # 判断是否是中文
        count+=1
print('中文字符的个数是:',count)


for 语句的注意事项：
  for 语句range调用顺序：
  示意：
    请问此程序打印的结果是什么？为什么？  
    i=6
    for x in range(1,i):      # range函数只调用一次
        print('x=',x,'i=',i)  # print函数执行5次
        i-=1  
  2.for语句变量列表里的变量可能不被创建
    for x in range(4,0):
        print(x)
    else:
        print('循环结束后x的值',x)  # 报错
     
  3.for语句中用break语句中断执行时,else子句不会被执行
    示例：
      for x in range(10):
          print(X)
          if x==3:
              break
      else:
          print('for语句结束')

for 语句嵌套

练习：
  写一个程序，打印26个大写英文字母和26个小写英文字母
答案：
for x in range(ord('A'),ord('Z')+1):
    print(chr(x),end='')
print()
for i in range(ord('a'),ord('z')+1):
    print(chr(i),end='')
print()


continue语句
  问题：
    如何让程序不再向下执行本次循环，重新开始一次新的循环
  作用：
    用于循环语句(while,for语句)中，不在执行本次循环内
    continue之后的语句，重新开始一次新的循环。
  说明：
    1.在for语句中执行continue语句,将会从可迭代对象中取下一个
      数据，绑定变量后开始一次新的循环
    2.在while语句中,执行continue语句,将会直接跳转到while语句
      真值表达式之外,重新判断循环条件
  语法：
    continue
  
  示例：
    for x in range(5):
        if x==2:
            continue
            print(x)      #  0 1 3 4

  跳过奇数,打印10以内的偶数
    for x in range(10)
        if x %2==1:
            continue 
            print(x)

练习：
  1.输入一个整数代表开始用begin绑定
    输入一个整数代表结束用end绑定
    打印begin~end(不包含end)之间的全部奇数
答案：
begin=int(input('输入一个整数开始：'))
end=int(input('输入一个整数结束：'))
for i in range(begin,end):
    if i%2==0:
        continue
    print(i)
  
  2.求1~100之间所有不能被2,3,5,7整除的数
    1.打印这些数
    2.打印这些数的和
答案：
#方法1
he=0
for i in range(1,100):
    if i%2==0:
        continue
    elif i%3==0:
        continue
    elif i%5==0:
        continue
    elif i%7==0:
        continue
    print(i)
    he+=i
print('以上数字的和是：',he)

#方法2
he=0
for i in range(1,100):
    if i%2==0 or\
       i%3==0 or\
       i%5==0 or\
       i%7==0:
       continue
    print(i)
    he+=i
print('以上数字的和是：',he)       



循环小结：
  while  语句
  for  语句
    字符串 str
    range() 函数返回的对象
  break  语句
  continue  语句


列表 list

列表的定义：
  列表是一种容器
  列表是可以被改变的序列
  列表是由一系列特定元素组成的,元素与元素之间可能没有任何的
  关联关系,但它们之间有先后顺序关系

python3中序列的类型(sequence)
  字符串  str 
  列表    list 
  ----- 以下后面会 -----
  元组  tuple 
  字节串  bytes
  字符数组  bytearray

创建空列表的字面值：
  []  #   创建空列表的表达式
创建非空列表的字面值：
  L=[1,2,3,4]
  L=['北京','上海','深圳']
  L=[1,'Two',3.14,'四']
  L=[1,2,[3.1,3.2],4]   


列表的构造(创建)函数list
  list()   # 生成一个空的列表  等同于[]
  list(iterable) 用可迭代对象创建一个列表
  示例:
    L=list()  #  L  绑定空列表 []
    L=list('hello')  #  L  绑定列表 ['h','e','l','l','o']
    L=list(range(4,6)) #  L  绑定列表 [4,5]


列表的运算：
  算术运算：
    +   +=   *   *=
  + 用于拼接列表
    lx=[1,2,3]
    ly=[4,5,6]
    lz=lx+ly  #  lz=[1,2,3,4,5,6]
  += 用原列表与右侧列表拼接,再用变量绑定列表
    语法：
      L += 可迭代对象
    示例：
      L=[1,2,3]
      L+=[4,5,6]  # L=[1,2,3,4,5,6]   id 没变
      L+="ABC"    # L=[1,2,3,4,5,6,'A','B','C']
      L+=range(11,12) # L=[1,2,3,4,5,6,'A','B','C',11]

  * 用于生成重复的列表
      x=[1,2]*3  # x=[1,2,1,2,1,2]
  *= 用原列表生成重复列表,并用变量绑定生成的列表
      x=[1,2]
      x*=3  #  x=[1,2,1,2,1,2]


列表的比较运算:
  运算符：
    <  <=  >  >=  ==  !=
  说明：
    列表的比较规则与字符串的比较规则相同
    列表要求每两个元素能依次进行比较,否则会出现类型错误
  示例：
    x=[1,2,3]
    y=[1,3,2]
    x<y    #  True
    x!=y   #  True
    x==y   #  False 
    [1,'a'] > ['a',1]   #  TypeError
    [1,'Two',3.14] < [1,'二',5.6]   # True

列表是可迭代对象：
  L=[1,3,5,7]
  for x in L:
      print(x)   #  1 3 5 7 

练习：
  1.写一个程序，让用户输入很多歌正整数，当输入负数时结束
    输入
    将用户输入的数存在于列表L中，打印这个列表
    如:
      请输入：1
      请输入：2
      请输入：3
      请输入：4
      请输入：-1
    打印：
      [1,2,3,4]
答案：
l=[]
while True:
    n=int(input('请输入整数：'))
    if n<0:
        break
    l+=[n]
print(l)

列表的in / not in 运算符：
  判断一个值是否存在于列表中,如果存在返回True,否则返回
  False
  说明：
    同字符串的 in / not in 类似,但是只能判断单个元素
    是否存在与列表中
  示例：
    x=[1,'Two',3.14,'Four']
    1 in x      #  True
    '3' in x    #  False
    4 not in x  #  True

列表的索引操作
  语法：
    列表[整数表达式]
  用法：
    等同于字符串的索引
    索引分为正向索引和反向索引,规则与字符串规则完全相同
  示例:
    x= [1,'二',3,'Four']
    print(x[1])  #  二
    print(x[-1]  #  Four


列表的索引赋值操作：
  列表是可变的序列，可以通过索引赋值改变列表中的元素
  语法：
    列表[整数表达式]=表达式
  示例:
    x= [1,'二',3,'Four']
    x[1]=2  # 将列表的第二个元素改为2
    x[-1]=4 
    print(x)  # [1,2,3,4]


列表的切片：
  语法:
    列表[(开始索引),(结束索引)(:(步长))]
  说明：
    列表切片取值返回一个列表,规则等同于字符串规则
  示例：
    x=[0,1,2,3,4,5,6,7,8]
    y=x[1:9:2]  #  [1,3,5,7]
    
切片的赋值操作：
  作用：
    可以改变原列表的排序,可以插入和修改数据
    可以用切片改变列表对应的元素的值
  语法：
    列表[切片]=可迭代对象
  注：赋值运算符的右侧必须是一个可迭代对象
    L=[2.2,3.3,4.4]
    L[0:1]=[1,2]    #  L=[1,2,3.3,4.4]
    L[2:]=[3,4,5]   #  L=[1,2,3,4,5]
    L[::]=[30,40]   #  L=[30,40]
    L[0:0]=[10,20]  #  L=[10,20,30,40]

    L=[3,4]
    L[1：1]=[3.1,3.2]  # L=[3,3.1,3.2,4]

    L=[3,5]
    L[1:1]="AB"  #  L=[3,'A','B',5]

    L=[3,5,10]
    L[1:2]=range(4,10)  # L=[3,4,5,6,7,8,9,10]

切片注意事项：
  对于步长不等于1的切片赋值,赋值运算符的右侧的可迭代
  对象提供的元素个数一定要等于切片切出的段数
  如：
    L=[1,2,3,4,5,6]
    L[::2]="ABC"   #  L=['A',2,'B',4,'C',6]
    L[::2]="ABCD"  #  错误


练习：
  1.
  写程序,输入一个三角形的宽和高,打印对应的三角形;
  输入3：
  1.
  *
  **
  ***
  2.
    *
   **
  ***
  3.
  ***
  **
  *
  4.
  ***
   **
    *
答案：
n=int(input("输入三角形的高度："))
for stars in range(1,n+1):
    print('*'*stars)

for stars in range(1,n+1):
    blanks=n-stars #计算空格个数
    print(' '*blanks+'*'*stars) 

for stars in range(n,0,-1):
    print('*'*stars)

for stars in range(n,0,-1):
    blanks=n-stars #计算空格个数
    print(' '*blanks+'*'*stars)

方法2
n=int(input("输入三角形的高度："))
i=1
while i<=n:
    print('*'*i)
    i+=1

n=int(input("输入三角形的高度："))
i=1
while i<=n:
    print(' '*(n-i)+'*'*i)
    i+=1

n=int(input("输入三角形的高度："))
i=1
while i<=n:
    print((n+1-i)*'*')
    i+=1

n=int(input("输入三角形的高度："))
i=1
while i<=n:
    print(' '*(i-1)+(n+1-i)*'*')
    i+=1

  2.
  写一个程序，任意输入一个整数，判断这个数是否为素数
  (prime)
  素数也叫质数,只能被1和自身整除的正整数
  如：2 3 5 7 11 
  提示：
  用排除法：
    当判断x是否为素数时，只要让x分别除以2,3,4,5
    x-1,只要有任何一个数能除尽,则说明
    x不是素数，否则x为素数
答案：
x=int(input("输入一个整数："))
if x<2:
    print(x,'不是素数')
else:
    for i in range(2,x):
        if x%i==0:
            print(x,'不是素数')
            break 
    else:
        print(x,'是素数')


  3. 
  编写程序求下列多项式的值:
  Sn=1/1-1/3+1/5-1/7+....
  1.求1000000个这样的分数相加的和是多少？
  2.将上一步的和乘以4打印出来，是多少？
答案：
sn=0
fenmu=1
i=0
sign=1  #代表正负符号
while i<1000000:
    r=sign*1/fenmu
    sn+=r
    sign*=-1
    fenmu+=2
    i+=1
print(sn)

  4.
  算出100～999之间的水仙花数(NarcissisticNumber)
  水仙花数是指百位数的3次方+十位的3次方+个位的3次方等于原数的
  整数
  如：
  153=1**3+5**3+3**3
  答案：
  153  370  
答案：
for bai in range(1,10):
    for shi in range(10):
        for ge in range(10):
            x=100*bai+10*shi+ge
            if x==bai**3+shi**3+ge**3:
                print(x)
